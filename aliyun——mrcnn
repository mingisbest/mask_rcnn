特别提醒
每做一次测试，都要新建一个notebook_pytorch


注意###做新图片测试时，可以把cv2.imshow("Instance Segmentation Result", result_image)
        cv2.waitKey(3)及以下全部注释掉



1.修改了shapes中关于ym文件
修改为
yaml_path = dataset_root_path + "/json_txt/" + filestr[0:-4] + ".txt"   在阿里云
原文件为
yaml_path = mask_path.split("\\")[0] + "/json_txt/" + filestr[0:-4] + ".txt"在shape副本文件中

2.training时修改了epoch为5为测试能否训练


3.修改了visilize文件
将源文件改为


skimage.io.imsave(os.path.join(ROOT_DIR,"02_ResultCheck/PredictionsImages") + file[0:-4] + ".png", image)
        plt.savefig(os.path.join(ROOT_DIR,"02_ResultCheck/PredictionsImages") + file[0:-4] + "_predict.png")
        cv2.imwrite(os.path.join(ROOT_DIR,"02_ResultCheck/PredictionsImages") + file[0:-4] + "_mask.png", mask_label)

        img1 = cv2.cvtColor(image, cv2.COLOR_RGB2RGBA)
        img2 = cv2.cvtColor(mask_label, cv2.COLOR_RGB2RGBA)
        img3 = cv2.cvtColor(cv2.imread(os.path.join(ROOT_DIR,"02_ResultCheck/PredictionsImages") + file[0:-4] + "_predict.png", cv2.IMREAD_COLOR), cv2.COLOR


问题：all the input array dimensions except for the concatenation axis must match exactly
是由于result_image, mask_label = visualize.display_instances(file, detect_filename, image, r['rois'], r['masks'], r['class_ids'], 
                                            dataset_train.class_names, r['scores']) 不在同一行
将其调整为一行后，错误消除
或者新开一个nootebook(特别注意)


3.注释掉# Test dataset
#testset_val = ShapesDataset()
#testset_val.load_shapes(test_num, test_img_dir, test_mask_dir, test_imglist, test_data_path)
#testset_val.prepare()
进行测试结果


4.   for file in os.listdir(test_img_dir):
        detect_filename = test_img_dir + "/" + file
        image = skimage.io.imread(detect_filename)
        # image = cv2.cvtColor(image, cv2.COLOR_GRAY2RGB)
        results = model.detect(detect_filename, [image], verbose=1)
        r = results[0]
        result_image, mask_label = visualize.display_instances(file, detect_filename, image, r['rois'], r['masks'], r['class_ids'], dataset_train.class_names, r['scores'])
        cal_L_A_4PIA(detect_filename.split('/')[-1:][0], mask_label)
        result_image = cv2.resize(result_image, (int((result_image.shape[1]) / 3), int((result_image.shape[0]) / 3)), 0, 0, cv2.INTER_CUBIC)
        print(7)        
        #cv2.imshow("Instance Segmentation Result", result_image)
        #cv2.waitKey(3)
        image, image_meta, gt_class_id, gt_bbox, gt_mask = modellib.load_image_gt(testset_val, inference_config, image_id, use_mini_mask=False)
        image_id = image_id + 1
        AP, precisions, recalls, overlaps = utils.compute_ap(gt_bbox, gt_class_id, gt_mask, r["rois"], r["class_ids"], r["scores"], r['masks'])
        print(10)
        APs.append(AP)
        Precision.append(precisions)
        Recall.append(recalls)
        
        该段代码无法实现循环，原因在于CV2的两行程序，将这两行程序注释掉，就可以了
